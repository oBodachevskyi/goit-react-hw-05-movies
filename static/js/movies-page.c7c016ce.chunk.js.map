{"version":3,"file":"static/js/movies-page.c7c016ce.chunk.js","mappings":"mLACA,EAAmC,qCAAnC,EAA0F,oC,SCE3E,SAASA,EAAT,GAAiD,IAA3BC,EAA0B,EAA1BA,YAAaC,EAAa,EAAbA,WAC9C,OAAQ,8BACJD,IACE,wBACGA,EAAYE,KAAI,gBAAEC,EAAF,EAAEA,GAAIC,EAAN,EAAMA,MAAN,OACf,eAAaC,UAAWC,EAAxB,UACE,SAAC,KAAD,CAAMC,GAAE,kBAAaJ,GACrBK,MAAOP,EACPI,UAAWC,EAFX,SAEiCF,KAH1BD,Y,oLCRjBM,EAAM,mCACNC,EAAW,+BAAjB,SAEgBC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,WAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,2GAAsCC,EAAtC,+BAA4C,GAAIC,EAAhD,+BAAyD,GAAzD,SACwBC,MAAMF,EAAKC,GADnC,YACOE,EADP,QAEiBC,GAFjB,iCAGWD,EAASE,OAHpB,gDAIKC,QAAQC,OAAO,IAAIC,MAAM,cAJ9B,2GAOM,SAASC,IACd,OAAOV,EAAuB,GAAD,OAAID,EAAJ,uCAA2CD,IAGlE,SAASa,EAAkBrB,GACjC,OAAOU,EAAuB,GAAD,OAAID,EAAJ,iCAAqCD,EAArC,iCAAiER,EAAjE,gCAGxB,SAASsB,EAAeC,GAC7B,OAAOb,EAAuB,GAAD,OAAID,EAAJ,kBAAsBc,EAAtB,oBAAyCf,EAAzC,oBAGxB,SAASgB,EAAmBD,GACjC,OAAOb,EAAuB,GAAD,OAAID,EAAJ,kBAAsBc,EAAtB,4BAAiDf,EAAjD,oBAGxB,SAASiB,EAAsBF,GACpC,OAAOb,EAAuB,GAAD,OAAID,EAAJ,kBAAsBc,EAAtB,4BAAiDf,EAAjD,6B,2HC1B/B,EAAoC,sCAApC,EAA+F,uC,SCMhF,SAASkB,IACpB,OAAoCC,EAAAA,EAAAA,UAAS,IAA7C,eAAO3B,EAAP,KAAmB4B,EAAnB,KACA,GAAwCD,EAAAA,EAAAA,UAAS,IAAjD,eAAOE,EAAP,KAAqBC,EAArB,KACMC,GAAUC,EAAAA,EAAAA,MACVC,GAAWC,EAAAA,EAAAA,MAuBjB,OANsB,OAAnBD,EAAS1B,OAAmC,KAAjBsB,IAC1BM,QAAQC,IAAIH,EAAS1B,OACrB8B,EAAAA,GAAiCJ,EAAS1B,OACrC+B,MAAK,SAAAC,GAAM,OAAIA,EAAOC,WACtBF,KAAKR,IAEQ,OAAnBG,EAAS1B,OAAiC,KAAfP,EACnB4B,EAAcK,EAAS1B,QAI9B,4BACG,iBACAkC,SAvBoB,SAACC,GACxBA,EAAEC,iBACiB,KAAf3C,IACAqC,EAAAA,GAAiCrC,GAChCsC,MAAK,SAAAC,GAAM,OAAIA,EAAOC,WACtBF,KAAKR,GACNC,EAAQa,KAAR,iBAAuB5C,MAgBxB,UAEA,8BACK,kBACII,UAAWC,EACXwC,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,gBACZC,MAAOjD,EACPkD,SApCU,SAACR,GACvBd,EAAcc,EAAES,cAAcF,WAqCtB,mBACAJ,KAAK,SACLzC,UAAWC,EAFX,0BAOR,0BACA,SAACP,EAAA,EAAD,CACAC,YAAa8B,EACb7B,WAAYA","sources":["webpack://react-homework-template/./src/components/MoviesList/MoviesList.module.css?de3d","components/MoviesList/MoviesList.jsx","services/API.jsx","webpack://react-homework-template/./src/views/MoviesPage/MoviesPage.module.css?0f72","views/MoviesPage/MoviesPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"moviesList_items\":\"MoviesList_moviesList_items__2MV8E\",\"moviesList_link\":\"MoviesList_moviesList_link__6gzOa\"};","import { Link } from 'react-router-dom';\nimport css from './MoviesList.module.css';\n\nexport default function MoviesList ({moviesArray, searchName}) {\n    return (<>\n       {moviesArray && (\n          <ul>\n            {moviesArray.map(({id, title}) => (\n              <li key={id} className={css.moviesList_items}>\n                <Link to={`/movies/${id}`}\n                state={searchName}\n                className={css.moviesList_link}>{title}</Link>\n              </li>\n            ))} \n          </ul>\n        )} \n    </>)\n}","const KEY = \"a6c2206a8d028e6d1935f3b46ada483d\";\nconst BASE_URL = 'https://api.themoviedb.org/3'; \n\n async function fetchWithErrorHandling(url = '', config = {}) {\n  const response = await fetch(url, config);\n  return response.ok\n    ? await response.json()\n    : Promise.reject(new Error('Not found'));\n} \n\nexport function fetchTrendingMovies() {\n  return fetchWithErrorHandling(`${BASE_URL}/trending/movie/day?api_key=${KEY}`);\n}\n\n export function fetchMoviesSearch(searchName) {\n  return fetchWithErrorHandling(`${BASE_URL}/search/movie?api_key=${KEY}&language=en-US&query=${searchName}&page=1&include_adult=false`);\n}\n\nexport function fetchMovieById(movieId) {\n  return fetchWithErrorHandling(`${BASE_URL}/movie/${movieId}?api_key=${KEY}&language=en-US`); \n}\n\nexport function fetchMovieCastById(movieId) {\n  return fetchWithErrorHandling(`${BASE_URL}/movie/${movieId}/credits?api_key=${KEY}&language=en-US`); \n}\n\nexport function fetchMovieReviewsById(movieId) {\n  return fetchWithErrorHandling(`${BASE_URL}/movie/${movieId}/reviews?api_key=${KEY}&language=en-US&page=1`); \n}\n","// extracted by mini-css-extract-plugin\nexport default {\"moviesPage__input\":\"MoviesPage_moviesPage__input__94NsU\",\"moviesPage__button\":\"MoviesPage_moviesPage__button__ipu4v\"};","import { useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { createBrowserHistory } from 'history';\nimport * as moviesShelfAPI from '../../services/API';\nimport MoviesList from '../../components/MoviesList/MoviesList';\nimport css from '../MoviesPage/MoviesPage.module.css'\n\nexport default function MoviesPage() {\n    const [searchName, setSearchName] = useState('');\n    const [moviesSearch, setMoviesSearch] = useState('');\n    const history = createBrowserHistory();\n    const location = useLocation();\n    \n\n    const handleInputValues = (e) => {\n        setSearchName(e.currentTarget.value)\n    }\n\n    const handleSubmitMovies = (e) => {\n        e.preventDefault()\n        if (searchName !== \"\") {\n            moviesShelfAPI.fetchMoviesSearch(searchName)\n            .then(movies => movies.results)\n            .then(setMoviesSearch); \n            history.push(`?query=${searchName}`)            \n    }\n}\n\n    if(location.state !== null && moviesSearch === ''){\n        console.log(location.state)\n        moviesShelfAPI.fetchMoviesSearch(location.state)\n            .then(movies => movies.results)\n            .then(setMoviesSearch)}\n\n    if(location.state !== null && searchName === '') {\n        return setSearchName(location.state)\n    }    \n\n    return (\n        <div>\n           <form\n           onSubmit={handleSubmitMovies}>\n           <label>\n                <input \n                    className={css.moviesPage__input}\n                    type=\"text\"\n                    autoComplete=\"off\"\n                    autoFocus\n                    placeholder=\"Search movies\"\n                    value={searchName}\n                    onChange={handleInputValues}>\n                </input>\n                <button \n                type=\"submit\"\n                className={css.moviesPage__button}>\n                    Search\n                </button>\n            </label>\n           </form>\n        <div>\n        <MoviesList \n        moviesArray={moviesSearch}\n        searchName={searchName}/>\n        </div>\n        </div>)}"],"names":["MoviesList","moviesArray","searchName","map","id","title","className","css","to","state","KEY","BASE_URL","fetchWithErrorHandling","url","config","fetch","response","ok","json","Promise","reject","Error","fetchTrendingMovies","fetchMoviesSearch","fetchMovieById","movieId","fetchMovieCastById","fetchMovieReviewsById","MoviesPage","useState","setSearchName","moviesSearch","setMoviesSearch","history","createBrowserHistory","location","useLocation","console","log","moviesShelfAPI","then","movies","results","onSubmit","e","preventDefault","push","type","autoComplete","autoFocus","placeholder","value","onChange","currentTarget"],"sourceRoot":""}