{"version":3,"file":"static/js/home-page.c4457d64.chunk.js","mappings":"mLACA,EAAmC,qCAAnC,EAA0F,oC,SCE3E,SAASA,EAAT,GAAiD,IAA3BC,EAA0B,EAA1BA,YAAaC,EAAa,EAAbA,WAC9C,OAAQ,8BACJD,IACE,wBACGA,EAAYE,KAAI,gBAAEC,EAAF,EAAEA,GAAIC,EAAN,EAAMA,MAAN,OACf,eAAaC,UAAWC,EAAxB,UACE,SAAC,KAAD,CAAMC,GAAE,kBAAaJ,GACrBK,MAAOP,EACPI,UAAWC,EAFX,SAEiCF,KAH1BD,Y,oLCRjBM,EAAM,mCACNC,EAAW,+BAAjB,SAEgBC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,WAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,2GAAsCC,EAAtC,+BAA4C,GAAIC,EAAhD,+BAAyD,GAAzD,SACwBC,MAAMF,EAAKC,GADnC,YACOE,EADP,QAEiBC,GAFjB,iCAGWD,EAASE,OAHpB,gDAIKC,QAAQC,OAAO,IAAIC,MAAM,cAJ9B,2GAOM,SAASC,IACd,OAAOV,EAAuB,GAAD,OAAID,EAAJ,uCAA2CD,IAGlE,SAASa,EAAkBrB,GACjC,OAAOU,EAAuB,GAAD,OAAID,EAAJ,iCAAqCD,EAArC,iCAAiER,EAAjE,gCAGxB,SAASsB,EAAeC,GAC7B,OAAOb,EAAuB,GAAD,OAAID,EAAJ,kBAAsBc,EAAtB,oBAAyCf,EAAzC,oBAGxB,SAASgB,EAAmBD,GACjC,OAAOb,EAAuB,GAAD,OAAID,EAAJ,kBAAsBc,EAAtB,4BAAiDf,EAAjD,oBAGxB,SAASiB,EAAsBF,GACpC,OAAOb,EAAuB,GAAD,OAAID,EAAJ,kBAAsBc,EAAtB,4BAAiDf,EAAjD,6B,kHCrBhB,SAASkB,IACpB,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KAQA,OANAC,EAAAA,EAAAA,YAAU,WACNC,EAAAA,KACCC,MAAK,SAAAJ,GAAM,OAAIA,EAAOK,WACtBD,KAAKH,KACP,KAEK,+BACN,SAAC,IAAD,CAAY9B,YAAa6B","sources":["webpack://react-homework-template/./src/components/MoviesList/MoviesList.module.css?de3d","components/MoviesList/MoviesList.jsx","services/API.jsx","views/HomePage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"moviesList_items\":\"MoviesList_moviesList_items__2MV8E\",\"moviesList_link\":\"MoviesList_moviesList_link__6gzOa\"};","import { Link } from 'react-router-dom';\nimport css from './MoviesList.module.css';\n\nexport default function MoviesList ({moviesArray, searchName}) {\n    return (<>\n       {moviesArray && (\n          <ul>\n            {moviesArray.map(({id, title}) => (\n              <li key={id} className={css.moviesList_items}>\n                <Link to={`/movies/${id}`}\n                state={searchName}\n                className={css.moviesList_link}>{title}</Link>\n              </li>\n            ))} \n          </ul>\n        )} \n    </>)\n}","const KEY = \"a6c2206a8d028e6d1935f3b46ada483d\";\nconst BASE_URL = 'https://api.themoviedb.org/3'; \n\n async function fetchWithErrorHandling(url = '', config = {}) {\n  const response = await fetch(url, config);\n  return response.ok\n    ? await response.json()\n    : Promise.reject(new Error('Not found'));\n} \n\nexport function fetchTrendingMovies() {\n  return fetchWithErrorHandling(`${BASE_URL}/trending/movie/day?api_key=${KEY}`);\n}\n\n export function fetchMoviesSearch(searchName) {\n  return fetchWithErrorHandling(`${BASE_URL}/search/movie?api_key=${KEY}&language=en-US&query=${searchName}&page=1&include_adult=false`);\n}\n\nexport function fetchMovieById(movieId) {\n  return fetchWithErrorHandling(`${BASE_URL}/movie/${movieId}?api_key=${KEY}&language=en-US`); \n}\n\nexport function fetchMovieCastById(movieId) {\n  return fetchWithErrorHandling(`${BASE_URL}/movie/${movieId}/credits?api_key=${KEY}&language=en-US`); \n}\n\nexport function fetchMovieReviewsById(movieId) {\n  return fetchWithErrorHandling(`${BASE_URL}/movie/${movieId}/reviews?api_key=${KEY}&language=en-US&page=1`); \n}\n","import { useState, useEffect } from 'react';\nimport * as moviesShelfAPI from '../services/API';\nimport MoviesList from '../components/MoviesList/MoviesList';\n\n\n\nexport default function HomePage() {\n    const [movies, setMovies] = useState('');\n\n    useEffect(() => {\n        moviesShelfAPI.fetchTrendingMovies()\n        .then(movies => movies.results)\n        .then(setMovies);\n    }, [])\n\n    return (<>\n      <MoviesList moviesArray={movies}/>\n      </>)\n}\n\n\n"],"names":["MoviesList","moviesArray","searchName","map","id","title","className","css","to","state","KEY","BASE_URL","fetchWithErrorHandling","url","config","fetch","response","ok","json","Promise","reject","Error","fetchTrendingMovies","fetchMoviesSearch","fetchMovieById","movieId","fetchMovieCastById","fetchMovieReviewsById","HomePage","useState","movies","setMovies","useEffect","moviesShelfAPI","then","results"],"sourceRoot":""}