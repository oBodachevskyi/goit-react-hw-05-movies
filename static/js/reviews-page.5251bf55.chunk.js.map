{"version":3,"file":"static/js/reviews-page.5251bf55.chunk.js","mappings":"2NAGe,SAASA,EAAT,GAAgC,IAAZC,EAAW,EAAXA,QAC/B,GAAwCC,EAAAA,EAAAA,UAAS,MAAjD,eAAOC,EAAP,KAAqBC,EAArB,KAaA,OAVDC,EAAAA,EAAAA,YAAU,WACLC,EAAAA,GAAqCL,GACpCM,MAAK,SAACC,GACH,GAAIA,EAAYC,QAAQC,OAAS,EAC7B,OAAQN,EAAgBI,EAAYC,cAG5C,CAACR,KAGG,8BACHE,EACDA,EAAaQ,KAAI,SAAAC,GAAM,OACnB,2BACI,wBAAKA,EAAOC,UACZ,uBAAID,EAAOE,YAFNF,EAAOG,QAIpB","sources":["views/Reviews.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport * as moviesShelfAPI from '../services/API';\n\nexport default function Reviews ({ movieId }) {\n    const [movieReviews, setMovieReviews] = useState(null);\n\n\n   useEffect(()=>{        \n        moviesShelfAPI.fetchMovieReviewsById(movieId)\n        .then((movieReview) => {\n            if (movieReview.results.length > 0) {\n                return (setMovieReviews(movieReview.results))\n            }            \n        }) \n     }, [movieId]);     \n\n\n    return (<>    \n        {movieReviews ?        \n        movieReviews.map(review => (\n            <li key={review.id}>\n                <h3>{review.author}</h3>\n                <p>{review.content}</p>\n            </li>)):\n        <p>We don't have any reviews for this movie</p>} \n    </>)}"],"names":["Reviews","movieId","useState","movieReviews","setMovieReviews","useEffect","moviesShelfAPI","then","movieReview","results","length","map","review","author","content","id"],"sourceRoot":""}